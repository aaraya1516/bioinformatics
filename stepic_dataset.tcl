
set strVal "TTCTACGTAACCAACTGGAACGTTAGTGGTCCGCCAACGTTAGTACGTGCTTTTCTACGTAAGGTCCGCCAACGTTAGTGGTCCGCCCCAACTGGTTCTACGTAAGGTCCGCCACGTGCTTCCAACTGGGGTCCGCCACGTGCTTACGTGCTTAACGTTAGTTTCTACGTAAAACGTTAGTCCAACTGGACGTGCTTTTCTACGTAAAACGTTAGTAACGTTAGTCCAACTGGCCAACTGGACGTGCTTAACGTTAGTTTCTACGTAAAACGTTAGTAACGTTAGTGGTCCGCCACGTGCTTCCAACTGGACGTGCTTACGTGCTTAACGTTAGTGGTCCGCCCCAACTGGAACGTTAGTCCAACTGGAACGTTAGTGGTCCGCCTTCTACGTAAAACGTTAGTGGTCCGCCACGTGCTTTTCTACGTAATTCTACGTAACCAACTGGTTCTACGTAAACGTGCTTTTCTACGTAATTCTACGTAAACGTGCTTCCAACTGGTTCTACGTAACCAACTGGAACGTTAGTACGTGCTTACGTGCTTAACGTTAGTACGTGCTTCCAACTGGACGTGCTTCCAACTGGTTCTACGTAATTCTACGTAATTCTACGTAAAACGTTAGTCCAACTGGCCAACTGGACGTGCTTTTCTACGTAAAACGTTAGTGGTCCGCCGGTCCGCCGGTCCGCCACGTGCTTGGTCCGCCAACGTTAGTCCAACTGGTTCTACGTAATTCTACGTAAACGTGCTTTTCTACGTAACCAACTGGGGTCCGCCTTCTACGTAAACGTGCTTAACGTTAGTACGTGCTTCCAACTGGAACGTTAGTAACGTTAGTTTCTACGTAATTCTACGTAAACGTGCTTAACGTTAGTAACGTTAGTACGTGCTTACGTGCTTTTCTACGTAAGGTCCGCCAACGTTAGTAACGTTAGTGGTCCGCCGGTCCGCCCCAACTGG"

# String Length
set strLength [string length $strVal]

#11

# Does it match a known start ATGATCAAG
set atga "ATGATCAAG"
set atgaMatch [string match -nocase $atga $strVal]

# Does it match a known stop ATGATCAAG
set cttg "CTTGATCAT"
set cttgMatch [string match -nocase $cttg $strVal]

set firstVal 0
set returnList ""
set strRange ""
set strFirst ""
proc forLooper {strVal firstVal OGincNum} {
	for {set incrNum $OGincNum} {[expr $incrNum - $firstVal] <= 11} {incr incrNum} {
		#puts "$incrNum"
		set strRange [string range $strVal $firstVal $incrNum]
		set strFirst [string first $strRange $strVal $firstVal]
		if {$strFirst >= 0 && [string length $strRange] == 11} {
			lappend returnList "$strRange"
			puts $strRange
		}
		#incr firstVal
	}
}

for {
		set firstVal 0
		set OGincNum 2
	} {
		$firstVal <= $strLength
	} {
		incr firstVal
		incr OGincNum
	} {
	forLooper $strVal $firstVal $OGincNum
}


puts "Length: $strLength
ATGA Match: $atgaMatch
CTTG Match: $cttgMatch
List: $returnList"