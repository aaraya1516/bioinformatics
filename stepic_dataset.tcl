
# string we are analyzing
set strVal "TTCTACGTAACCAACTGGAACGTTAGTGGTCCGCCAACGTTAGTACGTGCTTTTCTACGTAAGGTCCGCCAACGTTAGTGGTCCGCCCCAACTGGTTCTACGTAAGGTCCGCCACGTGCTTCCAACTGGGGTCCGCCACGTGCTTACGTGCTTAACGTTAGTTTCTACGTAAAACGTTAGTCCAACTGGACGTGCTTTTCTACGTAAAACGTTAGTAACGTTAGTCCAACTGGCCAACTGGACGTGCTTAACGTTAGTTTCTACGTAAAACGTTAGTAACGTTAGTGGTCCGCCACGTGCTTCCAACTGGACGTGCTTACGTGCTTAACGTTAGTGGTCCGCCCCAACTGGAACGTTAGTCCAACTGGAACGTTAGTGGTCCGCCTTCTACGTAAAACGTTAGTGGTCCGCCACGTGCTTTTCTACGTAATTCTACGTAACCAACTGGTTCTACGTAAACGTGCTTTTCTACGTAATTCTACGTAAACGTGCTTCCAACTGGTTCTACGTAACCAACTGGAACGTTAGTACGTGCTTACGTGCTTAACGTTAGTACGTGCTTCCAACTGGACGTGCTTCCAACTGGTTCTACGTAATTCTACGTAATTCTACGTAAAACGTTAGTCCAACTGGCCAACTGGACGTGCTTTTCTACGTAAAACGTTAGTGGTCCGCCGGTCCGCCGGTCCGCCACGTGCTTGGTCCGCCAACGTTAGTCCAACTGGTTCTACGTAATTCTACGTAAACGTGCTTTTCTACGTAACCAACTGGGGTCCGCCTTCTACGTAAACGTGCTTAACGTTAGTACGTGCTTCCAACTGGAACGTTAGTAACGTTAGTTTCTACGTAATTCTACGTAAACGTGCTTAACGTTAGTAACGTTAGTACGTGCTTACGTGCTTTTCTACGTAAGGTCCGCCAACGTTAGTAACGTTAGTGGTCCGCCGGTCCGCCCCAACTGG"
# codon size we are looking at
set desiredLength 11
# true size
set desiredLength [expr $desiredLength - 1]

# String Length
set strLength [string length $strVal]

# Does it match a known start ATGATCAAG
set atga "ATGATCAAG"
set atgaMatch [string match -nocase $atga $strVal]

# Does it match a known stop ATGATCAAG
set cttg "CTTGATCAT"
set cttgMatch [string match -nocase $cttg $strVal]

set returnList ""
list strRange ""
set strFirst ""


for {set i 0} { $i < $strLength} {incr i} {
	
	# This gets the 11 character string desired
	set strRange [string range $strVal $i [expr $i + $desiredLength]]
	set strFirst [string first $strRange $strVal $i]
	set regexpCount [regexp -all $strRange $strVal]
	
	# the ten is an arbitrary min times of repetition
	if {$regexpCount >= 10 && [string length $strRange] == 11} {
		puts "$strRange:$regexpCount"
	}
}


puts "Length: $strLength
ATGA Match: $atgaMatch
CTTG Match: $cttgMatch"